#!/bin/bash
# Author: Kent Chadwick
# Description: Removes business entries based on user input of business name or contact name
#
# if statement determines if the user is searching for Business or Contact name via $1
if [ $1 -eq 1 ]; then
	input=$(awk -F "\t" '{print $1}' BusinessDetails | grep -i $2 | sort)
else
	input=$(awk -F "\t" '{print $2}' BusinessDetails | grep -i $2 | sort)
fi

# Count the number of entries that match the user's search input, and store the value in $inputCount
inputCount=$(echo "$input" | grep -ci $2)

# Display different options depending on the value of $inputCount
if [ $inputCount -eq 0 ] # no matches
then
	echo "Your search didn't match any records in our address book."
	echo
	echo "Would you like to perform another search? (y/n):"
	read ans1
	if [[ $ans1 == y* || $ans1 == Y* ]]
	then
		case $1 in
                1)
                        echo
                        read -p "Please enter the business name: " bizName
                        echo
                        ./RmBiz 1 $bizName
                        ;;
                2)
                        echo
                        read -p "Please enter the contact name: " contactName
                        echo
			./RmBiz 2 $contactName
                        ;;
		esac
	else
		echo
		echo "Good bye!"
		echo
		exit 0
	fi
elif [ $inputCount -gt 1 ] # more than one result
then
	echo "Your search matched $inputCount records."
	echo
	subMenu=true
	while [ "$subMenu" == true ]; do	# Menu will reload until user enters valid input
		echo "Which record would you like to remove?"
		echo "~~~~~~~~~~~~~~~~~~~~"
		# While loop to create numbered menu based on the number of entries returned by the user search
		count=1
		while [ $count -le $inputCount ]; do
			inputTerm=$(echo "$input" | sed -n "${count}p")
			if [ $1 -eq 1 ]; then # different awk expression depending on search for bizName or contactName
				# use $1 variable as an awk variable to test match of particular column, and then print the whole line
			        menuLine=$(awk -F "\t" -v var="$inputTerm" '{if ($1 == var) print $0;}' BusinessDetails)
			else
        			menuLine=$(awk -F "\t" -v var="$inputTerm" '{if ($2 == var) print $0;}' BusinessDetails)
			fi
			newL=$'\n'
			menuLines+="$count) $menuLine$newL"
			selectFrom+="count$count $menuLine$newL"
			((count++))
		done
		# menu header
		resultMenu=$'Business Name\tContact Name\tAddress\tPhone Number\tEmail Address\n----------\t---------\t----------\t----------\t----------\n'
                resultMenu+="$menuLines"
                echo "$resultMenu" | column -t -s $'\t' -n # displays options w/ column layout
		echo "~~~~~~~~~~~~~~~~~~~~"
		removeAll=$(($inputCount + 1))
		echo "$removeAll) Remove all of the above"
		echo "~~~~~~~~~~~~~~~~~~~~"
		mainMenOption=$(($inputCount + 2))
		echo "$mainMenOption) Return to Main Menu"
		echo "~~~~~~~~~~~~~~~~~~~~"
		echo "0) Exit"
	        echo "~~~~~~~~~~~~~~~~~~~~"
		read -p "Menu choice: " choice
		if [ $choice -eq  $mainMenOption ] 2> /dev/null
		then
			subMenu=false
			./Menu
		elif [ $choice -eq 0 ] 2> /dev/null
		then
			subMenu=false
			echo
			echo "Goodbye!"
			echo
			exit 0
		elif [ $choice -eq $removeAll ] 2> /dev/null
		then
			echo
			echo "Are you sure you want to remove these $inputCount records? (y/n)"
			read sure
			echo
                        if [[ $sure == y* || $sure == Y* ]]; then
				resultMenu=$'Business Name\tContact Name\tAddress\tPhone Number\tEmail Address\n----------\t---------\t----------\t----------\t----------\n'
				# loop to display the results
				count=1
				while [ $count -le $inputCount ]; do
					if [ $inputCount -lt 10 ]; then # variations to account for prefix length to be cut from string
	                	                chosenEntry=$(echo "$selectFrom" | column -t -s $'\t' -n | grep "count$count" | cut -c 8-)
						resutMenu+="$chosenEntry"
	                	        elif [ $inputCount -lt 100 ]; then
	                	                chosenEntry=$(echo "$selectFrom" | column -t -s $'\t' -n | grep "count$count" | cut -c 9-)
						resutMenu+="$chosenEntry"
	                	        else
	                	                chosenEntry=$(echo "$selectFrom" | column -t -s $'\t' -n | grep "count$count" | cut -c 10-)
						resutMenu+="$chosenEntry"
	                	        fi
					if [ $1 -eq 1 ]; then
                                        	bizName=$(echo "$chosenEntry" | awk '{print $1}')
                                        	toDelete=$(awk -F "\t" -v var="$bizName" '{if ($1 == var) print $0;}' BusinessDetails)
                                	else
                                        	contactName=$(echo "$chosenEntry" | awk '{print $2}')
                                        	toDelete=$(awk -F "\t" -v var="$contactName" '{if ($2 == var) print $0;}' BusinessDetails)
                                	fi
                                	sed -i "/$toDelete/d" BusinessDetails
					((count++))
				done
				echo
				echo "$inputCount entries deleted."
				echo
				subMenu=false
			else
				echo
                                echo "Would you like to perform another search? (y/n): "
                                read ans4
                                if [[ $ans4 == y* || $ans4 == Y* ]]; then
                                        case $1 in
                                        1)
                                                echo
                                                read -p "Please enter the business name: " bizName
                                                echo
                                                ./RmBiz 1 $bizName
                                                ;;
                                        2)
                                                echo
                                                read -p "Please enter the contact name: " contactName
                                                echo
                                                ./RmBiz 2 $contactName
                                                ;;
                                        esac
                                else
                                        subMenu=false
                                        echo
                                        echo "Good bye!"
                                        echo
                                        exit 0
                                fi
			fi
			echo
		elif [ $choice -lt $removeAll ] 2> /dev/null
		then
			subMenu=false
			echo
			echo "Are you sure you want to delete the following business record?"
			echo
			# menu header
			resultMenu=$'Business Name\tContact Name\tAddress\tPhone Number\tEmail Address\n----------\t---------\t----------\t----------\t----------\n'
			if [ $choice -lt 10 ]; then # differnet options for cutting the prefix
				chosenEntry=$(echo "$selectFrom" | grep "count$choice" | cut -c 8-)
				resultMenu+="$chosenEntry"
				echo "$resultMenu" | column -t -s $'\t' -n # display in column layout
			elif [ $choice -lt 100 ]; then
				chosenEntry=$(echo "$selectFrom" | grep "count$choice" | cut -c 9-)
				resultMenu+="$chosenEntry"
                                echo "$resultMenu" | column -t -s $'\t' -n
			else
				chosenEntry=$(echo "$selectFrom" | grep "count$choice" | cut -c 10-)
				resultMenu+="$chosenEntry"
                                echo "$resultMenu" | column -t -s $'\t' -n
			fi
			echo
			read -p "(y/n): " sureDelete
			if [[ $sureDelete == y* || $sureDelete == Y* ]]; then
				if [ $1 -eq 1 ]; then
					bizName=$(echo "$chosenEntry" | awk '{print $1}')
					toDelete=$(awk -F "\t" -v var="$bizName" '{if ($1 == var) print $0;}' BusinessDetails)
				else
					contactName=$(echo "$chosenEntry" | awk '{print $2}')
	                                toDelete=$(awk -F "\t" -v var="$contactName" '{if ($2 == var) print $0;}' BusinessDetails)
				fi
				sed -i "/$toDelete/d" BusinessDetails
	                	echo
	                	echo "Business record deleted."
	                	echo
			else
				echo
				echo "Would you like to perform another search? (y/n): "
				read ans4
	        		if [[ $ans4 == y* || $ans4 == Y* ]]; then
	                		case $1 in
	                		1)
	                        		echo
	                        		read -p "Please enter the business name: " bizName
	                        		echo
	                        		./RmBiz 1 $bizName
	                        		;;
	                		2)
	                        		echo
	                        		read -p "Please enter the contact name: " contactName
	                        		echo
	                        		./RmBiz 2 $contactName
	        	        		;;
	                		esac
	        		else
	                		subMenu=false
					echo
	                		echo "Good bye!"
	                		echo
	                		exit 0
	        		fi
			fi
		else
			echo
			echo "Ivalid input. Please enter a number between 0 and $mainMenOption."
			echo
			# clear previous results to allow for new search
			menuLines=""
			selectFrom=""
		fi
	done	# Close the while loop for the sub-menu
else
	echo
	echo "Your search matched the following record."
	echo
	echo "Would you like to delete this Business?"
	echo
	inputTerm=$(echo "$input" | sed -n 1p)
        if [ $1 -eq 1 ]; then # different awk expression depending on search for bizName or contactName
		# use $1 variable as an awk variable to test match of particular column, and then print the whole line
                singleResult=$(awk -F "\t" -v var="$inputTerm" '{if ($1 == var) print $0;}' BusinessDetails)
        else
                singleResult=$(awk -F "\t" -v var="$inputTerm" '{if ($2 == var) print $0;}' BusinessDetails)
        fi
	singleResultMenu=$'Business Name\tContact Name\tAddress\tPhone Number\tEmail Address\n----------\t---------\t----------\t----------\t----------\n'
        singleResultMenu+="$singleResult"
        echo "$singleResultMenu" | column -t -s $'\t' -n
	echo
	read -p "(y/n): " ans2
	if [[ $ans2 == y* || $ans2 == Y* ]]
	then
		sed -i "/$singleResult/d" BusinessDetails
		echo
		echo "Business record deleted."
		echo
		./Menu
	else
		echo "Would you like to perform another search? (y/n): "
		read ans3
	        if [[ $ans3 == y* || $ans3 == Y* ]]; then
                	case $1 in
                	1)
                        	echo
	                        read -p "Please enter the business name: " bizName
		                echo
                	        ./RmBiz 1 $bizName
                        	;;
                	2)
                        	echo
                        	read -p "Please enter the contact name: " contactName
                        	echo
                        	./RmBiz 2 $contactName
                        	;;
                	esac
        	else
                	echo
                	echo "Good bye!"
                	echo
                	exit 0
        	fi

	fi
fi

exit 0
